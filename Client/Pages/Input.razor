@using Client.Shared.API;
@inject API APIServe

@page "/input"

<div class="headers">
    <h1>Input Data</h1>
</div>

<div class="page-body">
    <div>
        <p>
            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
        </p>
    </div>

    <div>
        <label for="inputData">Enter your data:</label>
        <input id="inputData" @bind="dataString" />
    </div>
    
    <div>
        <label for="truncData">Truncate Data:</label>
        <input type="checkbox" @bind="truncate"/>
    </div>

    <div>
        <label for="compPercent">Compression Percentage (0-100):</label>
        <input id="compPercent" type="number" @bind="compression" min="0" max="100" />
        <button @onclick="SendData">Submit</button>
    </div>

    <div>
        @if (outputData != null && outputData.Any())
        {
            <p> Graph the data </p>
            <ScatterChart YVals="outputData" @key="outputData" />
        }
    </div>
</div>


@code {
    private string dataString;
    private int[] inputData;
    private int[] outputData;
    private bool truncate = false;
    private int compression = 0;
    [Inject] private NavigationManager NavMan { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void SendData()
    {
        inputData = dataString.Split(',').Select(s => int.TryParse(s, out int result) ? result : 0).ToArray();
        outputData = APIServe.ForwardHadamardTransform(inputData, truncate, compression);
        StateHasChanged();
    }
}