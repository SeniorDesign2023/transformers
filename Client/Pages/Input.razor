@using Client.Models
@using Client.Shared.API
@inject API APIServe

@page "/input"

<div class="card">
    <div class="card-header text-center fs-2">
        Transform Data
    </div>

    <div class="card-body">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
    </div>
</div>

<div class="card">
  <div class="card-header">
    <ul class="nav nav-tabs card-header-tabs">
      <li class="nav-item">
        <a class="nav-link active" aria-current="true" href="/input">Input Data</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" style="color: black" href="/upload">Upload Data</a>
      </li>
    </ul>
  </div>
  <div class="card-group">
    <div class="card" style="background-color: #d3d3d3">
      <div class="card-body">
          <label for="inputData">Enter your data:</label>
          <input id="inputData" @bind="dataString" />
      </div>
    </div>

    <div class="card" style="background-color: #d3d3d3">
      <div class="card-body">
        <label for="truncData">Truncate Data:</label>
        <input type="checkbox" @bind="truncate"/>
      </div>
    </div>
  </div>

  <div class="card-footer text-end">
    <button @onclick="SendData" class="btn btn-primary">Submit</button>
  </div>
</div>

@foreach(var data in dataList)
{
    <div class="card" style="background-color: #d3d3d3">
    <div class="card-body text-center">
        <ScatterChart YVals="data.Elements" @key="data" />
    </div>
    <div class="card-footer text-end">
        <button @onclick="() => InverseData(data)" class="btn btn-primary">Inverse</button>
        <input id="compPercent" type="number" @bind="data.Compression" min="0" max="100" />%
        <button @onclick="() => FilterData(data)" class="btn btn-primary">Filter</button>
    </div>
    </div>
}


@code {
    private string dataString;
    private double[] inputData;
    private List<Data> dataList = new List<Data>();
    private bool truncate = false;
    [Inject] private NavigationManager NavMan { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private void SendData()
    {
        inputData = dataString.Split(',').Select(s => double.TryParse(s, out double result) ? result : 0).ToArray();
        dataList.Clear();
        Data data = new Data
        {
            Elements = APIServe.ForwardWalshTransform(inputData, truncate, 0)
        };
        dataList.Add(data);
        StateHasChanged();
    }

    private void FilterData(Data oldData)
    {
        Data data = new Data
        {
            Elements = APIServe.Filter(oldData.Elements, oldData.Compression)
        };
        dataList.Add(data);
        StateHasChanged();
    }

    private void InverseData(Data oldData)
    {
        Data data = new Data
        {
            Elements = APIServe.InverseWalshTransform(oldData.Elements)
        };
        dataList.Add(data);
        StateHasChanged();
    }
}