@using Client.Services
@using Client.Shared.API
@inject API APIServ
@inject SettingsService SettingsServe
@inject IFolderPicker FP

@page "/settings"

<div class="headers">
    <h1>Settings</h1>
</div>

<div class="page-body">
    <p>
        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
    </p>

    <div>
        <button @onclick="PickFolder">Pick Folder</button>
        @path
    </div>

    <div>
        <label for="numMatrices">Number of Hadimards (1-15):</label>
        <input id="numMatrices" type="number" @bind="matrices" min="1" max="15" />
        <button @onclick="ChangeSettings">Submit</button>
    </div>
</div>


@code {
    private string path = "No path chosen";
    private int matrices = 1;
    [Inject] private NavigationManager NavMan { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task PickFolder()
    {
        try
        {
            @* var folderPicker = DependencyService.Get<IFolderPicker>(); *@
            path = await FP.PickFolder();
        }
        catch (Exception ex)
        {
            // Handle exception if needed
            path = "Error picking folder: " + ex.Message;
        }
    }
    private void ChangeSettings()
    {
        SettingsServe.SetSettings(path: path , m: matrices);
        APIServ.Initialize();
    }

}